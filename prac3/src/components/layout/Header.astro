---
import HamburguerMenuIcon from '@/components/icons/HamburguerMenuIcon.astro';
import SunIcon from '@/components/icons/SunIcon.astro';
import MoonIcon from '@/components/icons/MoonIcon.astro';

import { NAVITEMS } from '@/constants/navItems';
import { ACTIVITIES } from '@/constants/activities';
---

<header
  transition:persist
  class="fixed z-10 flex w-full justify-center md:pt-2"
>
  <nav
    class="navbar border-base-300 bg-base-200 md:max-w-screen-md md:rounded-xl"
  >
    <div class="flex-1">
      <a href="/#" aria-label="home" class="smooth-scroll">
        <img
          width="145"
          height="50"
          src="/disneyland-california-logo.svg"
          alt="disneyland-california-logo"
          class="ml-4 brightness-200"
        />
      </a>
    </div>

    <div class="px-1 md:items-center">
      <ul class="menu menu-horizontal hidden" id="desktopMenu">
        <li id="navItems" class="flex-row">
          {
            NAVITEMS.map(({ url, label, text }) => (
              <a href={url} aria-label={label} class="smooth-scroll">
                {text}
              </a>
            ))
          }
        </li>
        <li id="activitiesMenu">
          <details id="headerMenuDetails">
            <summary>Activities</summary>
            <ul class="rounded-t-none bg-base-100 p-2">
              {
                ACTIVITIES.map(({ id, title }) => (
                  <li>
                    <a href={`/activities/${id}`} aria-label={id}>
                      {title}
                    </a>
                  </li>
                ))
              }
            </ul>
          </details>
        </li>
      </ul>

      <div class="dropdown hidden" id="mobileMenu">
        <div tabindex="0" role="button" class="btn btn-circle btn-ghost">
          <HamburguerMenuIcon />
        </div>
        <ul
          tabindex="0"
          class="menu dropdown-content menu-sm z-[1] mt-10 w-32 rounded-box bg-base-100 p-2 shadow"
        >
          {
            NAVITEMS.map(({ url, label, text }) => (
              <li>
                <a href={url} aria-label={label} class="smooth-scroll">
                  {text}
                </a>
              </li>
            ))
          }
          <li>
            <details>
              <summary>Activities</summary>
              <ul>
                {
                  ACTIVITIES.map(({ id, title }) => (
                    <li>
                      <a href={`/activities/${id}`} aria-label={id}>
                        {title}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </details>
          </li>
        </ul>
      </div>

      <ul class="menu hidden" id="themeToggle">
        <li>
          <label class="swap swap-rotate">
            <input type="checkbox" class="theme-controller" />
            <SunIcon id="sunIcon" />
            <MoonIcon id="moonIcon" />
          </label>
        </li>
      </ul>
    </div>
  </nav>

  <script>
    function getReversePrefersColorScheme(): string {
      const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      return isDark ? 'light' : 'dark';
    }

    function handleResize() {
      // md breakpoint
      if (window.innerWidth >= 768) {
        fullMenu!.style.display = 'flex';
        hamburgerMenu!.style.display = 'none';
      } else {
        fullMenu!.style.display = 'none';
        hamburgerMenu!.style.display = 'flex';
      }
    }

    function closeMenuDetails() {
      const details = document.getElementById('headerMenuDetails');
      details!.removeAttribute('open');
    }

    const colorScheme = getReversePrefersColorScheme();
    const themeController: HTMLInputElement | null =
      document.querySelector('.theme-controller');

    themeController!.value = colorScheme;

    const sunIcon = document.getElementById('sunIcon');
    const moonIcon = document.getElementById('moonIcon');

    if (colorScheme === 'light') {
      sunIcon!.classList.add('swap-off');
      moonIcon!.classList.add('swap-on');
    } else {
      sunIcon!.classList.add('swap-on');
      moonIcon!.classList.add('swap-off');
    }

    const themeToggle = document.getElementById('themeToggle');
    themeToggle!.style.display = 'flex';

    const hamburgerMenu = document.getElementById('mobileMenu');
    const fullMenu = document.getElementById('desktopMenu');

    window.addEventListener('resize', handleResize);
    window.addEventListener('load', handleResize);

    const activitiesMenu = document.getElementById('activitiesMenu');

    activitiesMenu!.querySelectorAll('details a').forEach((link) => {
      link.addEventListener('click', (_) => closeMenuDetails());
    });
  </script>
</header>
